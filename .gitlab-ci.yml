stages:
  - install
  - build
  - test
  - deploy

image: registry.miichisoft.net/miichisoft/templates/next:latest

include:
  - template: Security/Container-Scanning.gitlab-ci.yml
container_scanning:
  variables:
    CS_IMAGE: registry.miichisoft.net/miichisoft/templates/next:latest
  tags:
    - next

yarn:
  stage: install
  # Cache the `node_modules` folder
  # using the `CI_JOB_NAME` suffix on the key.
  cache:
    key: $CI_JOB_NAME-$CI_COMMIT_REF_SLUG
    paths:
      - node_modules/
  # Install and compile.
  script:
    - yarn --version
    - yarn --install --pure-lockfile
  # Provide the other jobs of the pipeline with
  # the node dependencies and the compiled assets.
  artifacts:
    expire_in: 1 days
    paths:
      - node_modules/
  tags:
    - next

build-yarn:
  stage: build
  dependencies:
    - yarn
  script:
    - yarn --version
    - yarn run build
  artifacts:
    paths:
      - .next/
    expire_in: 1 days
    when: always
  tags:
    - next

linter:
  stage: test
  dependencies:
    - yarn
  script:
    - yarn --version
    - yarn run lint
  tags:
    - next

sonarqube:
  stage: test
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [""]
  variables:
    SONAR_USER_HOME: "${CI_PROJECT_DIR}/.sonar"  # Defines the location of the analysis task cache
    GIT_DEPTH: "0"  # Tells git to fetch all the branches of the project, required by the analysis task
  cache:
    key: "${CI_JOB_NAME}"
    paths:
      - .sonar/cache
  script:
    - sonar-scanner
  allow_failure: true
  only:
    - develop # or the name of your main branch
  tags:
    - next
ssh:
  stage: deploy
  script:
    - echo "This job deploys something from the $CI_COMMIT_BRANCH branch."
  tags:
    - next
